@inject site.Services.GameServerService gameServerService

@implements IDisposable

@inject NavigationManager NavigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">88Server Panel</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <AuthorizeView Roles="Admin">
            <Authorized>
                <!-- CSS -->
                <div class="nav-item px-3 d-flex align-items-center">
                    <NavLink class="nav-link" href="serverstatus/cssserver">
                        <span class="circle-glow @(serverStatus.TryGetValue("cssserver", out var cssUp) && cssUp ? "bg-success" : "bg-danger") me-2"></span>
                        <span class="bi bi-hdd-stack" aria-hidden="true"></span> CSS Server
                    </NavLink>
                </div>

                <!-- TF2 -->
                <div class="nav-item px-3 d-flex align-items-center">
                    <NavLink class="nav-link" href="serverstatus/tf2server">
                        <span class="circle-glow @(serverStatus.TryGetValue("tf2server", out var tf2Up) && tf2Up ? "bg-success" : "bg-danger") me-2"></span>
                        <span class="bi bi-hdd-stack" aria-hidden="true"></span> TF2 Server
                    </NavLink>
                </div>



@*                 <!-- Counter-Strike: Source Server -->
                <div class="nav-item px-3 d-flex align-items-center">
                    <NavLink class="nav-link" href="serverstatus/cssserver">
                        <span class="circle-glow bg-success me-2"></span>
                        <span class="bi bi-hdd-stack" aria-hidden="true"></span> CSS Server
                    </NavLink>
                </div>

                <!-- Team Fortress 2 Server -->
                <div class="nav-item px-3 d-flex align-items-center">
                    <NavLink class="nav-link" href="serverstatus/tf2server">
                        <span class="circle-glow bg-success me-2"></span>
                        <span class="bi bi-hdd-stack" aria-hidden="true"></span> TF2 Server
                    </NavLink>
                </div> *@

                <!-- Admin Panel -->
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="admin">
                        <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> Admin Panel
                    </NavLink>
                </div>
            </Authorized>
        </AuthorizeView>


        <AuthorizeView>
            <Authorized>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Manage">
                        <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="nav-link">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                        </button>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Register">
                        <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Login">
                        <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private string? currentUrl;
    private bool isLoading = true;


    // SERVERSSSS
    private Dictionary<string, string> servers = new()
{
    { "cssserver", "cssserver" },
    { "tf2server", "tf2server" }
};
    private Dictionary<string, bool> serverStatus = new();

    private CancellationTokenSource? statusCts;


    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
        statusCts = new CancellationTokenSource();
        _ = CheckServerStatusLoop(statusCts.Token);
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    private async Task CheckServerStatusLoop(CancellationToken token)
    {
        while (!token.IsCancellationRequested)
        {
            await CheckServerStatus();
            await Task.Delay(TimeSpan.FromSeconds(30), token);
        }
    }









@using site.Services;
    private async Task CheckServerStatus()
{
    isLoading = true;
    StateHasChanged();

    try
    {
        foreach (var server in servers)
        {
            var profile = server.Key;
            var user = server.Value;
            var isRunning = await gameServerService.IsServerStartedAsync(profile, user);

            serverStatus[profile] = isRunning;
        }
    }
    catch (Exception)
    {
        foreach (var key in servers.Keys)
        {
            serverStatus[key] = false;
        }
    }
    finally
    {
        isLoading = false;
        StateHasChanged();
    }
}



public void Dispose()
{
    NavigationManager.LocationChanged -= OnLocationChanged;
    statusCts?.Cancel();
    statusCts?.Dispose();
}
}
<style>
    .circle-glow {
        display: inline-block;
        width: 12px;
        height: 12px;
        border-radius: 50%;
        box-shadow: 0 0 8px 2px rgba(0,255,0,0.6);
        margin-right: 4px;
        vertical-align: middle;
    }

    .bg-success {
        background-color: #28a745 !important;
        box-shadow: 0 0 8px 2px rgba(40,167,69,0.6);
    }

    .bg-danger {
        background-color: #dc3545 !important;
        box-shadow: 0 0 8px 2px rgba(220,53,69,0.6);
    }
</style>

